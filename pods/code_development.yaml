name: "Code Development Pod"
description: "Software development, code review, and technical documentation - an elite pod of orcas specialized in building robust software systems"

# LLM Configuration (using CodeLlama for better code generation)
llm:
  model: "ollama/codellama"
  base_url: "http://localhost:11434"
  temperature: 0.2  # Lower temperature for more precise code
  max_tokens: 4096

# Available tools for this pod
tools:
  enabled:
    - "search_tool"
    - "file_tool"
    - "code_analysis_tool"
  disabled:
    - "scrape_tool"

# Agent definitions (the coding orcas in this pod)
agents:
  architect:
    role: "Software Architect"
    goal: "Design robust and scalable software architecture for {project}"
    backstory: |
      You are an experienced software architect who specializes in designing 
      clean, maintainable, and scalable software systems. You analyze requirements 
      and create comprehensive technical specifications.
    allow_delegation: false
    verbose: true
    tools: ["search_tool", "file_tool"]
  
  developer:
    role: "Senior Developer"
    goal: "Implement high-quality code based on architectural specifications"
    backstory: |
      You are a senior developer with expertise in multiple programming languages.
      You write clean, efficient, and well-documented code following best practices
      and design patterns. You ensure code quality and maintainability.
    allow_delegation: false
    verbose: true
    tools: ["file_tool", "code_analysis_tool"]
  
  reviewer:
    role: "Code Reviewer"
    goal: "Review code for quality, security, and best practices"
    backstory: |
      You are an expert code reviewer who ensures code quality, security,
      and adherence to best practices. You provide constructive feedback
      and suggestions for improvement.
    allow_delegation: false
    verbose: true
    tools: ["code_analysis_tool"]

# Task definitions (the development strategy)
tasks:
  design:
    description: |
      1. Analyze the project requirements for {project}.
      2. Design the overall system architecture.
      3. Define component interactions and data flow.
      4. Specify technology stack and dependencies.
      5. Create detailed technical specifications.
    expected_output: "Comprehensive architectural design document with diagrams and specifications."
    agent: "architect"
  
  implement:
    description: |
      1. Implement the designed architecture in code.
      2. Follow coding best practices and conventions.
      3. Add comprehensive documentation and comments.
      4. Ensure proper error handling and logging.
      5. Write unit tests for critical components.
    expected_output: "Complete, well-documented code implementation with tests."
    agent: "developer"
  
  review:
    description: |
      1. Review the implemented code for quality and best practices.
      2. Check for security vulnerabilities and performance issues.
      3. Verify adherence to coding standards.
      4. Suggest improvements and optimizations.
    expected_output: "Detailed code review report with recommendations and approval status."
    agent: "reviewer"

# Execution flow
workflow:
  agents: ["architect", "developer", "reviewer"] 
  tasks: ["design", "implement", "review"]
  verbose: true

# Input requirements
inputs:
  required:
    - name: "project"
      description: "Description of the software project to develop"
      type: "string"
      example: "Build a REST API for user authentication with JWT tokens, password hashing, and role-based access control"
  optional:
    - name: "language"
      description: "Preferred programming language"
      type: "string"
      default: "Python"
      example: "Python"
    - name: "framework"
      description: "Preferred framework or library"
      type: "string"
      default: "FastAPI"
      example: "FastAPI"
